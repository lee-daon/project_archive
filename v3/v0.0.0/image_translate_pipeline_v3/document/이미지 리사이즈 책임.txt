# 이미지 리사이즈 책임 요약

## 📋 요구사항
- **Short 타입**: 1000x1000px 최종 출력
- **Long 타입**: 가로 864px (비율 유지) 최종 출력

## 🔄 현재 파이프라인 (3단계 리사이즈)

```
OCR 좌표(원본) → 전처리(GPU용 크기) → 후처리(원본 복원) → 렌더링(최종 크기)
     ↓              ↓                    ↓                 ↓
   원본 크기    →  1024x1024 패딩    →   원본 크기 복원   →  최종 출력
```

### 단계별 책임
1. **전처리**: 원본 → GPU 처리용 크기 (1024x1024 또는 864x1504)
2. **후처리**: GPU 결과 → 원본 크기 복원 (OCR 좌표 매칭용)
3. **렌더링**: 원본 → 최종 출력 크기 + 텍스트 좌표 스케일링

## ⚠️ 핵심 제약사항
**텍스트 좌표는 원본 크기 기준** → 이미지 리사이즈와 좌표 스케일링이 **동시에** 발생해야 함

## ✅ 해결 완료
**`rendering.py` 수정으로 long 타입 처리 추가**

```python
if not is_long:
    # Short: 1024x1024 (기존)
    rendered_image = cv2.resize(inpainted_image, (1024, 1024))
else:
    # Long: 가로 864px, 비율 유지 (신규 추가)
    target_w = 864
    scale = target_w / original_w
    target_h = int(original_h * scale)
    rendered_image = cv2.resize(inpainted_image, (target_w, target_h))
```

## 🎯 현재 상태
- **Short**: 1024x1024px 출력 (요구사항 1000x1000과 24px 차이)
- **Long**: 가로 864px 출력 ✅ 완료

**Short를 1000x1000으로 변경하려면**: `config.py`에서 `RESIZE_TARGET_SIZE = (1000, 1000)` 수정
