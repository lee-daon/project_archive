{
  "version": 3,
  "sources": ["../bundle-JeCuS9/checked-fetch.js", "../bundle-JeCuS9/strip-cf-connecting-ip-header.js", "../../../node_modules/src/src/Router.ts", "../../../node_modules/src/src/StatusError.ts", "../../../node_modules/src/src/createResponse.ts", "../../../node_modules/src/src/json.ts", "../../../node_modules/src/src/error.ts", "../../../node_modules/src/src/status.ts", "../../../node_modules/src/src/text.ts", "../../../node_modules/src/src/html.ts", "../../../node_modules/src/src/jpeg.ts", "../../../node_modules/src/src/png.ts", "../../../node_modules/src/src/webp.ts", "../../../node_modules/src/src/withContent.ts", "../../../node_modules/src/src/withCookies.ts", "../../../node_modules/src/src/withParams.ts", "../../../node_modules/src/src/createCors.ts", "../../../src/durable_object.mjs", "../../../src/index.mjs", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-JeCuS9/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-JeCuS9/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\leeda\\programing\\trackingWorkers\\.wrangler\\tmp\\dev-ZZP2o1",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export class ProductTracker {\r\n  constructor(state, env) {\r\n    this.state = state;\r\n    this.env = env;\r\n    this.views = {}; // \uBA54\uBAA8\uB9AC\uC5D0 \uC800\uC7A5\uB418\uB294 \uC870\uD68C\uC218\r\n  }\r\n\r\n  // \uBA54\uC778 \uC6CC\uCEE4\uB85C\uBD80\uD130\uC758 fetch \uC694\uCCAD \uCC98\uB9AC\r\n  async fetch(request) {\r\n    const url = new URL(request.url);\r\n    const { userId, productId, market } = Object.fromEntries(url.searchParams);\r\n\r\n    if (!userId || !productId || !market) {\r\n      return new Response('Missing required parameters', { status: 400 });\r\n    }\r\n    \r\n    // \uC54C\uB78C\uC5D0 \uC0AC\uC6A9\uD560 ID\uAC00 \uC5C6\uB294 \uACBD\uC6B0 \uC800\uC7A5\r\n    await this.state.storage.put({ userId, productId });\r\n\r\n    // \uBA54\uBAA8\uB9AC \uB0B4 \uC870\uD68C\uC218 \uC99D\uAC00\r\n    this.views[market] = (this.views[market] || 0) + 1;\r\n    this.views['total'] = (this.views['total'] || 0) + 1;\r\n\r\n    // \uC54C\uB78C\uC774 \uC124\uC815\uB418\uC9C0 \uC54A\uC740 \uACBD\uC6B0 \uB370\uC774\uD130 \uC800\uC7A5\uC744 \uC704\uD55C \uC54C\uB78C \uC124\uC815\r\n    const currentAlarm = await this.state.storage.getAlarm();\r\n    if (currentAlarm === null) {\r\n      // \uD14C\uC2A4\uD2B8\uB97C \uC704\uD574 1\uBD84\uC73C\uB85C \uC124\uC815\r\n      const oneMinute = 1 * 60 * 1000;\r\n      await this.state.storage.setAlarm(Date.now() + oneMinute);\r\n    }\r\n\r\n    return new Response('Tracked', { status: 200 });\r\n  }\r\n\r\n  // fetch()\uC5D0\uC11C \uC124\uC815\uB41C \uC54C\uB78C\uC774 \uC6B8\uB9B4 \uB54C \uD638\uCD9C\uB418\uB294 \uBA54\uC11C\uB4DC\r\n  async alarm() {\r\n    const { userId, productId } = await this.state.storage.get(['userId', 'productId']);\r\n    if (!userId || !productId || Object.keys(this.views).length === 0) {\r\n        return;\r\n    }\r\n    \r\n    const today = new Date().toISOString().slice(0, 10); // YYYY-MM-DD\r\n\r\n    const viewsToCommit = this.views;\r\n    this.views = {};\r\n\r\n    const markets = ['cou', 'nav', 'ele', 'acu', 'gma'];\r\n    const viewEntries = markets.map(m => viewsToCommit[m] || 0);\r\n    const totalViews = viewsToCommit['total'] || 0;\r\n\r\n    const statement = `\r\n      INSERT INTO product_views (date, userId, productId, cou_views, nav_views, ele_views, acu_views, gma_views, total_views)\r\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n      ON CONFLICT(date, userId, productId) DO UPDATE SET\r\n        cou_views = cou_views + excluded.cou_views,\r\n        nav_views = nav_views + excluded.nav_views,\r\n        ele_views = ele_views + excluded.ele_views,\r\n        acu_views = acu_views + excluded.acu_views,\r\n        gma_views = gma_views + excluded.gma_views,\r\n        total_views = total_views + excluded.total_views;\r\n    `;\r\n\r\n    try {\r\n        await this.env.DB.prepare(statement).bind(today, userId, productId, ...viewEntries, totalViews).run();\r\n    } catch (e) {\r\n        console.error('D2 write failed:', e.message);\r\n        // DB \uC4F0\uAE30 \uC2E4\uD328 \uC2DC \uB370\uC774\uD130 \uC190\uC2E4\uC744 \uB9C9\uAE30 \uC704\uD574 \uC870\uD68C\uC218 \uBCF5\uC6D0.\r\n        // \uB354 \uC548\uC815\uC801\uC778 \uD574\uACB0\uCC45\uC73C\uB85C\uB294 \uD2B8\uB79C\uC7AD\uC158 \uC544\uC6C3\uBC15\uC2A4 \uD328\uD134\uC774\uB098 \uD050\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.\r\n        this.views = viewsToCommit;\r\n        // \uB098\uC911\uC5D0 \uB2E4\uC2DC \uC2DC\uB3C4\uD558\uB3C4\uB85D \uC54C\uB78C \uC7AC\uC124\uC815\r\n        await this.state.storage.setAlarm(Date.now() + 60 * 1000); // 1\uBD84 \uD6C4\uC5D0 \uB2E4\uC2DC \uC2DC\uB3C4\r\n    }\r\n  }\r\n} ", "import { Router } from 'itty-router';\r\nimport { ProductTracker } from './durable_object.mjs';\r\n\r\nconst router = Router();\r\n\r\n// Base64\uB97C ArrayBuffer\uB85C \uBCC0\uD658\uD558\uB294 \uD5EC\uD37C \uD568\uC218\r\nfunction base64ToArrayBuffer(base64) {\r\n  const binaryString = atob(base64);\r\n  const len = binaryString.length;\r\n  const bytes = new Uint8Array(len);\r\n  for (let i = 0; i < len; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\n// 1x1 \uAC80\uC740\uC0C9 PNG\uC758 Base64 \uB370\uC774\uD130\r\nconst PNG_BASE64 = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+P+/HgAFhAJ/wlseKgAAAABJRU5ErkJggg==';\r\nconst PNG_DATA = base64ToArrayBuffer(PNG_BASE64);\r\n\r\n// \uD2B8\uB798\uD0B9 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\r\nrouter.get('/:market/:userId(\\\\d+)/:productId(\\\\d+)', async ({ params }, env, ctx) => {\r\n  const { userId, productId, market } = params;\r\n\r\n  // market \uC720\uD6A8\uC131 \uAC80\uC0AC \uCD94\uAC00\r\n  const validMarkets = ['cou', 'nav', 'ele', 'acu', 'gma'];\r\n  if (!validMarkets.includes(market)) {\r\n    return new Response('Not Found.', { status: 404 });\r\n  }\r\n\r\n  // \uC0AC\uC6A9\uC790-\uC0C1\uD488 \uC30D\uBCC4\uB85C \uACE0\uC720\uC131\uC744 \uBCF4\uC7A5\uD558\uAE30 \uC704\uD574 userId\uC640 productId\uC758 \uC870\uD569\uC744 DO \uC774\uB984\uC73C\uB85C \uC0AC\uC6A9.\r\n  const doId = env.PRODUCT_TRACKER.idFromName(`${userId}-${productId}`);\r\n  const stub = env.PRODUCT_TRACKER.get(doId);\r\n\r\n  // \uD30C\uB77C\uBBF8\uD130\uB97C \uC804\uB2EC\uD558\uBA70 Durable Object\uB85C \uC694\uCCAD\uC744 \uC804\uB2EC\r\n  const doUrl = new URL('https://worker.internal/track');\r\n  doUrl.searchParams.set('userId', userId);\r\n  doUrl.searchParams.set('productId', productId);\r\n  doUrl.searchParams.set('market', market);\r\n  \r\n  // DO\uC758 \uC751\uB2F5\uC774 \uCC98\uB9AC\uB420 \uB54C\uAE4C\uC9C0 \uAE30\uB2E4\uB9B4 \uD544\uC694 \uC5C6\uC74C.\r\n  // \uC774\uB97C \uD1B5\uD574 \uC0AC\uC6A9\uC790\uC5D0\uAC8C \uB354 \uBE60\uB978 \uC751\uB2F5\uC744 \uC81C\uACF5.\r\n  ctx.waitUntil(stub.fetch(doUrl.toString()));\r\n\r\n  // 1x1 \uD53D\uC140 \uAC80\uC740\uC0C9 PNG \uBC18\uD658\r\n  return new Response(PNG_DATA, {\r\n    headers: {\r\n      'Content-Type': 'image/png',\r\n      'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n      Pragma: 'no-cache',\r\n      Expires: '0',\r\n    },\r\n  });\r\n});\r\n\r\n// \uC870\uD68C \uB370\uC774\uD130\uB97C \uCFFC\uB9AC\uD558\uAE30 \uC704\uD55C API \uC5D4\uB4DC\uD3EC\uC778\uD2B8\r\nrouter.get('/api/views', async ({ query, request }, env, ctx) => {\r\n  // --- \uC778\uC99D \uCCB4\uD06C \uCD94\uAC00 ---\r\n  const authHeader = request.headers.get('Authorization');\r\n  const expectedToken = `Bearer ${env.API_SECRET}`;\r\n\r\n  if (!env.API_SECRET || authHeader !== expectedToken) {\r\n    return new Response(JSON.stringify({ error: 'Unauthorized' }), {\r\n      status: 401,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n  }\r\n  // --- \uC5EC\uAE30\uAE4C\uC9C0 ---\r\n  \r\n  const { \r\n    userId, \r\n    days = '30', \r\n    market = 'total',\r\n    min_views,\r\n    max_views,\r\n    sort_order = 'desc' \r\n  } = query;\r\n\r\n  if (!userId) {\r\n    return new Response(JSON.stringify({ error: 'userId query parameter is required' }), {\r\n      status: 400,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n  }\r\n\r\n  const startDate = new Date();\r\n  startDate.setDate(startDate.getDate() - parseInt(days, 10));\r\n  const startDateString = startDate.toISOString().slice(0, 10);\r\n\r\n  const marketMap = {\r\n    cou: 'cou_views',\r\n    nav: 'nav_views',\r\n    ele: 'ele_views',\r\n    acu: 'acu_views',\r\n    gma: 'gma_views',\r\n    total: 'total_views'\r\n  };\r\n\r\n  const sortColumn = marketMap[market.toLowerCase()] || 'total_views';\r\n  const order = sort_order.toLowerCase() === 'asc' ? 'ASC' : 'DESC';\r\n\r\n  const havingConditions = [];\r\n  const bindings = [userId, startDateString];\r\n\r\n  if (min_views !== undefined) {\r\n    havingConditions.push(`SUM(${sortColumn}) >= ?`);\r\n    bindings.push(parseInt(min_views, 10));\r\n  }\r\n\r\n  if (max_views !== undefined) {\r\n    havingConditions.push(`SUM(${sortColumn}) <= ?`);\r\n    bindings.push(parseInt(max_views, 10));\r\n  }\r\n  \r\n  const havingClause = havingConditions.length > 0\r\n    ? `HAVING ${havingConditions.join(' AND ')}`\r\n    : '';\r\n\r\n  let queryBuilder = `\r\n    SELECT \r\n      productId, \r\n      SUM(total_views) as total_views,\r\n      SUM(cou_views) as cou_views,\r\n      SUM(nav_views) as nav_views,\r\n      SUM(ele_views) as ele_views,\r\n      SUM(acu_views) as acu_views,\r\n      SUM(gma_views) as gma_views\r\n    FROM product_views \r\n    WHERE userId = ? AND date >= ?\r\n    GROUP BY productId\r\n    ${havingClause}\r\n    ORDER BY ${sortColumn} ${order}\r\n    LIMIT 100;\r\n  `;\r\n\r\n  try {\r\n    const { results } = await env.DB.prepare(queryBuilder)\r\n      .bind(...bindings)\r\n      .all();\r\n      \r\n    return new Response(JSON.stringify(results), {\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n  } catch (e) {\r\n    return new Response(JSON.stringify({ error: e.message }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n  }\r\n});\r\n\r\nrouter.all('*', () => new Response('Not Found.', { status: 404 }));\r\n\r\nexport default {\r\n  fetch: router.handle,\r\n};\r\n\r\n// Durable Object \uD074\uB798\uC2A4 \uB0B4\uBCF4\uB0B4\uAE30\r\nexport { ProductTracker }; ", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\leeda\\\\programing\\\\trackingWorkers\\\\src\\\\index.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\leeda\\\\programing\\\\trackingWorkers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\leeda\\\\programing\\\\trackingWorkers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\leeda\\\\programing\\\\trackingWorkers\\\\src\\\\index.mjs\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\leeda\\\\programing\\\\trackingWorkers\\\\.wrangler\\\\tmp\\\\bundle-JeCuS9\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\leeda\\\\programing\\\\trackingWorkers\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\leeda\\\\programing\\\\trackingWorkers\\\\.wrangler\\\\tmp\\\\bundle-JeCuS9\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\leeda\\\\programing\\\\trackingWorkers\\\\.wrangler\\\\tmp\\\\bundle-JeCuS9\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["Router", "base", "routes", "other", "__proto__", "Proxy", "get", "target", "prop", "receiver", "path", "fetch", "route", "handlers", "push", "toUpperCase", "RegExp", "replace", "async", "request", "args", "response", "match", "url", "URL", "query", "k", "v", "searchParams", "concat", "method", "regex", "pathname", "params", "groups", "handler", "proxy", "createResponse", "format", "transform", "body", "headers", "rest", "constructor", "name", "Response", "entries", "Object", "fromEntries", "json", "JSON", "stringify", "text", "createResponse", "String", "html", "jpeg", "png", "webp", "e", "i", "e", "e", "e"]
}
