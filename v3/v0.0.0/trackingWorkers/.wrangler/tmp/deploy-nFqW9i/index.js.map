{
  "version": 3,
  "sources": ["../../../node_modules/src/src/Router.ts", "../../../node_modules/src/src/StatusError.ts", "../../../node_modules/src/src/createResponse.ts", "../../../node_modules/src/src/json.ts", "../../../node_modules/src/src/error.ts", "../../../node_modules/src/src/status.ts", "../../../node_modules/src/src/text.ts", "../../../node_modules/src/src/html.ts", "../../../node_modules/src/src/jpeg.ts", "../../../node_modules/src/src/png.ts", "../../../node_modules/src/src/webp.ts", "../../../node_modules/src/src/withContent.ts", "../../../node_modules/src/src/withCookies.ts", "../../../node_modules/src/src/withParams.ts", "../../../node_modules/src/src/createCors.ts", "../../../src/durable_object.mjs", "../../../src/index.mjs"],
  "sourceRoot": "C:\\Users\\leeda\\programing\\trackingWorkers\\.wrangler\\tmp\\deploy-nFqW9i",
  "sourcesContent": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export class ProductTracker {\n  constructor(state, env) {\n    this.state = state;\n    this.env = env;\n    this.views = {}; // \uBA54\uBAA8\uB9AC\uC5D0 \uC800\uC7A5\uB418\uB294 \uC870\uD68C\uC218\n    \n    // \uC2DC\uC791 \uC2DC \uC2A4\uD1A0\uB9AC\uC9C0\uC5D0\uC11C \uBA54\uBAA8\uB9AC \uC0C1\uD0DC \uBCF5\uC6D0\n    this.state.blockConcurrencyWhile(async () => {\n      const storedViews = await this.state.storage.get('views');\n      if (storedViews) {\n        this.views = storedViews;\n      }\n    });\n  }\n\n  // \uBA54\uC778 \uC6CC\uCEE4\uB85C\uBD80\uD130\uC758 fetch \uC694\uCCAD \uCC98\uB9AC\n  async fetch(request) {\n    const url = new URL(request.url);\n    const userId = url.searchParams.get('userId');\n    const productId = url.searchParams.get('productId');\n    const groupId = url.searchParams.get('groupId');\n    const market = url.searchParams.get('market');\n\n    if (!userId || !productId || !groupId || !market) {\n      return new Response('Missing required parameters', { status: 400 });\n    }\n    \n    // \uC54C\uB78C\uC5D0 \uC0AC\uC6A9\uD560 ID\uB97C \uAC1C\uBCC4\uC801\uC73C\uB85C \uC800\uC7A5\n    await this.state.storage.put('userId', userId);\n    await this.state.storage.put('productId', productId);\n    await this.state.storage.put('groupId', groupId);\n\n    // \uBA54\uBAA8\uB9AC \uB0B4 \uC870\uD68C\uC218 \uC99D\uAC00\n    this.views[market] = (this.views[market] || 0) + 1;\n    this.views['total'] = (this.views['total'] || 0) + 1;\n\n    // \uBA54\uBAA8\uB9AC \uC0C1\uD0DC\uB97C \uC2A4\uD1A0\uB9AC\uC9C0\uC5D0\uB3C4 \uC800\uC7A5\n    await this.state.storage.put('views', this.views);\n\n    // \uC54C\uB78C\uC774 \uC124\uC815\uB418\uC9C0 \uC54A\uC740 \uACBD\uC6B0 \uB370\uC774\uD130 \uC800\uC7A5\uC744 \uC704\uD55C \uC54C\uB78C \uC124\uC815\n    const currentAlarm = await this.state.storage.getAlarm();\n    if (currentAlarm === null) {\n      // \uD504\uB85C\uB355\uC158 \uD658\uACBD: 5\uBD84\uC73C\uB85C \uC124\uC815\n      const fiveMinutes = 1 * 6 * 1000;\n      const alarmTime = Date.now() + fiveMinutes;\n      await this.state.storage.setAlarm(alarmTime);\n    }\n\n    return new Response('Tracked', { status: 200 });\n  }\n\n  // fetch()\uC5D0\uC11C \uC124\uC815\uB41C \uC54C\uB78C\uC774 \uC6B8\uB9B4 \uB54C \uD638\uCD9C\uB418\uB294 \uBA54\uC11C\uB4DC\n  async alarm() {\n    const userId = await this.state.storage.get('userId');\n    const productId = await this.state.storage.get('productId');\n    const groupId = await this.state.storage.get('groupId');\n    const storedViews = await this.state.storage.get('views');\n    \n    // \uC2A4\uD1A0\uB9AC\uC9C0\uC5D0\uC11C \uBCF5\uC6D0\n    if (storedViews && Object.keys(this.views).length === 0) {\n      this.views = storedViews;\n    }\n    \n    if (!userId || !productId || !groupId || Object.keys(this.views).length === 0) {\n        return;\n    }\n    \n    const today = new Date().toISOString().slice(0, 10); // YYYY-MM-DD\n\n    const viewsToCommit = this.views;\n    this.views = {};\n\n    const markets = ['cou', 'nav', 'ele', 'acu', 'gma'];\n    const viewEntries = markets.map(m => viewsToCommit[m] || 0);\n    const totalViews = viewsToCommit['total'] || 0;\n\n    const statement = `\n      INSERT INTO product_views (userId, date, productId, groupId, cou_views, nav_views, ele_views, acu_views, gma_views, total_views)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      ON CONFLICT(userId, date, productId) DO UPDATE SET\n        cou_views = cou_views + excluded.cou_views,\n        nav_views = nav_views + excluded.nav_views,\n        ele_views = ele_views + excluded.ele_views,\n        acu_views = acu_views + excluded.acu_views,\n        gma_views = gma_views + excluded.gma_views,\n        total_views = total_views + excluded.total_views;\n    `;\n\n    try {\n        await this.env.DB.prepare(statement).bind(userId, today, productId, groupId, ...viewEntries, totalViews).run();\n        \n        // \uC131\uACF5\uC801\uC73C\uB85C \uC800\uC7A5\uB418\uC5C8\uC73C\uBA74 \uC2A4\uD1A0\uB9AC\uC9C0\uC5D0\uC11C views \uC0AD\uC81C\n        await this.state.storage.delete('views');\n        \n    } catch (e) {\n        console.error('D2 write failed:', e.message);\n        // DB \uC4F0\uAE30 \uC2E4\uD328 \uC2DC \uB370\uC774\uD130 \uC190\uC2E4\uC744 \uB9C9\uAE30 \uC704\uD574 \uC870\uD68C\uC218 \uBCF5\uC6D0.\n        this.views = viewsToCommit;\n        await this.state.storage.put('views', this.views);\n        // \uB098\uC911\uC5D0 \uB2E4\uC2DC \uC2DC\uB3C4\uD558\uB3C4\uB85D \uC54C\uB78C \uC7AC\uC124\uC815\n        await this.state.storage.setAlarm(Date.now() + 60 * 1000); // 1\uBD84 \uD6C4\uC5D0 \uB2E4\uC2DC \uC2DC\uB3C4\n    }\n  }\n} ", "import { Router } from 'itty-router';\nimport { ProductTracker } from './durable_object.mjs';\n\nconst router = Router();\n\n// Base64\uB97C ArrayBuffer\uB85C \uBCC0\uD658\uD558\uB294 \uD5EC\uD37C \uD568\uC218\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n// 1x1 \uAC80\uC740\uC0C9 PNG\uC758 Base64 \uB370\uC774\uD130\nconst PNG_BASE64 = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+P+/HgAFhAJ/wlseKgAAAABJRU5ErkJggg==';\nconst PNG_DATA = base64ToArrayBuffer(PNG_BASE64);\n\n// \uD2B8\uB798\uD0B9 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\nrouter.get('/:market/:userId/:productId/:groupId', async (request, env, ctx) => {\n  // URL\uC5D0\uC11C \uD30C\uB77C\uBBF8\uD130 \uC9C1\uC811 \uCD94\uCD9C\n  const url = new URL(request.url);\n  const pathParts = url.pathname.split('/').filter(part => part !== '');\n  \n  const market = pathParts[0];\n  const userIdStr = pathParts[1];\n  const productIdStr = pathParts[2];\n  const groupIdStr = pathParts[3];\n\n  // market \uC720\uD6A8\uC131 \uAC80\uC0AC\n  const validMarkets = ['cou', 'nav', 'ele', 'acu', 'gma'];\n  if (!validMarkets.includes(market)) {\n    return new Response('Not Found.', { status: 404 });\n  }\n\n  // userId, productId, groupId \uC22B\uC790 \uAC80\uC99D\n  const userId = parseInt(userIdStr, 10);\n  const productId = parseInt(productIdStr, 10);\n  const groupId = parseInt(groupIdStr, 10);\n  \n  if (isNaN(userId) || isNaN(productId) || isNaN(groupId) || userId <= 0 || productId <= 0 || groupId <= 0) {\n    return new Response('Invalid user, product, or group ID', { status: 400 });\n  }\n\n  // \uC0AC\uC6A9\uC790-\uC0C1\uD488 \uC30D\uBCC4\uB85C \uACE0\uC720\uC131\uC744 \uBCF4\uC7A5\uD558\uAE30 \uC704\uD574 userId\uC640 productId\uC758 \uC870\uD569\uC744 DO \uC774\uB984\uC73C\uB85C \uC0AC\uC6A9.\n  const doId = env.PRODUCT_TRACKER.idFromName(`${userId}-${productId}`);\n  const stub = env.PRODUCT_TRACKER.get(doId);\n\n  // \uD30C\uB77C\uBBF8\uD130\uB97C \uC804\uB2EC\uD558\uBA70 Durable Object\uB85C \uC694\uCCAD\uC744 \uC804\uB2EC\n  const doUrl = new URL('https://worker.internal/track');\n  doUrl.searchParams.set('userId', userId.toString());\n  doUrl.searchParams.set('productId', productId.toString());\n  doUrl.searchParams.set('groupId', groupId.toString());\n  doUrl.searchParams.set('market', market);\n  \n  // DO\uC758 \uC751\uB2F5\uC774 \uCC98\uB9AC\uB420 \uB54C\uAE4C\uC9C0 \uAE30\uB2E4\uB9B4 \uD544\uC694 \uC5C6\uC74C.\n  // \uC774\uB97C \uD1B5\uD574 \uC0AC\uC6A9\uC790\uC5D0\uAC8C \uB354 \uBE60\uB978 \uC751\uB2F5\uC744 \uC81C\uACF5.\n  ctx.waitUntil(stub.fetch(doUrl.toString()));\n\n  // 1x1 \uD53D\uC140 \uAC80\uC740\uC0C9 PNG \uBC18\uD658\n  return new Response(PNG_DATA, {\n    headers: {\n      'Content-Type': 'image/png',\n      'Cache-Control': 'no-cache, no-store, must-revalidate',\n      Pragma: 'no-cache',\n      Expires: '0',\n    },\n  });\n});\n\n// \uC870\uD68C \uB370\uC774\uD130\uB97C \uCFFC\uB9AC\uD558\uAE30 \uC704\uD55C API \uC5D4\uB4DC\uD3EC\uC778\uD2B8\nrouter.get('/api/views', async (request, env, ctx) => {\n  // --- \uC778\uC99D \uCCB4\uD06C \uCD94\uAC00 ---\n  const authHeader = request.headers.get('Authorization');\n  const expectedToken = `Bearer ${env.API_SECRET}`;\n\n  if (!env.API_SECRET || authHeader !== expectedToken) {\n    return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n      status: 401,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n  // --- \uC5EC\uAE30\uAE4C\uC9C0 ---\n  \n  // URL\uC5D0\uC11C \uCFFC\uB9AC \uD30C\uB77C\uBBF8\uD130 \uCD94\uCD9C\n  const url = new URL(request.url);\n  const userIdStr = url.searchParams.get('userId');\n  const productIdStr = url.searchParams.get('productId');\n  const groupIdStr = url.searchParams.get('groupId');\n  const daysStr = url.searchParams.get('days') || '30';\n  const market = url.searchParams.get('market') || 'total';\n  const minViewsStr = url.searchParams.get('min_views');\n  const maxViewsStr = url.searchParams.get('max_views');\n  const sort_order = url.searchParams.get('sort_order') || 'desc';\n\n  // userId \uD544\uC218 \uAC80\uC99D\n  if (!userIdStr) {\n    return new Response(JSON.stringify({ error: 'userId query parameter is required' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n\n  // \uC22B\uC790 \uD30C\uB77C\uBBF8\uD130 \uAC80\uC99D\n  const userId = parseInt(userIdStr, 10);\n  const days = parseInt(daysStr, 10);\n  \n  if (isNaN(userId) || userId <= 0) {\n    return new Response(JSON.stringify({ error: 'Invalid userId' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n  \n  if (isNaN(days) || days < 1 || days > 365) {\n    return new Response(JSON.stringify({ error: 'Invalid days (1-365)' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n\n  // productId \uC120\uD0DD\uC801 \uAC80\uC99D\n  let productId = null;\n  if (productIdStr) {\n    productId = parseInt(productIdStr, 10);\n    if (isNaN(productId) || productId <= 0) {\n      return new Response(JSON.stringify({ error: 'Invalid productId' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n  }\n\n  // groupId \uC120\uD0DD\uC801 \uAC80\uC99D\n  let groupId = null;\n  if (groupIdStr) {\n    groupId = parseInt(groupIdStr, 10);\n    if (isNaN(groupId) || groupId <= 0) {\n      return new Response(JSON.stringify({ error: 'Invalid groupId' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n  }\n\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - days);\n  const startDateString = startDate.toISOString().slice(0, 10);\n\n  const marketMap = {\n    cou: 'cou_views',\n    nav: 'nav_views',\n    ele: 'ele_views',\n    acu: 'acu_views',\n    gma: 'gma_views',\n    total: 'total_views'\n  };\n\n  const sortColumn = marketMap[market.toLowerCase()] || 'total_views';\n  const order = sort_order.toLowerCase() === 'asc' ? 'ASC' : 'DESC';\n\n  const whereConditions = ['userId = ?', 'date >= ?'];\n  const bindings = [userId, startDateString];\n\n  // productId \uC870\uAC74 \uCD94\uAC00\n  if (productId !== null) {\n    whereConditions.push('productId = ?');\n    bindings.push(productId);\n  }\n\n  // groupId \uC870\uAC74 \uCD94\uAC00\n  if (groupId !== null) {\n    whereConditions.push('groupId = ?');\n    bindings.push(groupId);\n  }\n\n  const havingConditions = [];\n\n  // min_views \uAC80\uC99D \uBC0F \uCC98\uB9AC\n  if (minViewsStr && minViewsStr !== 'null') {\n    const minViews = parseInt(minViewsStr, 10);\n    if (!isNaN(minViews) && minViews >= 0) {\n      havingConditions.push(`SUM(${sortColumn}) >= ?`);\n      bindings.push(minViews);\n    }\n  }\n\n  // max_views \uAC80\uC99D \uBC0F \uCC98\uB9AC\n  if (maxViewsStr && maxViewsStr !== 'null') {\n    const maxViews = parseInt(maxViewsStr, 10);\n    if (!isNaN(maxViews) && maxViews >= 0) {\n      havingConditions.push(`SUM(${sortColumn}) <= ?`);\n      bindings.push(maxViews);\n    }\n  }\n  \n  const whereClause = `WHERE ${whereConditions.join(' AND ')}`;\n  const havingClause = havingConditions.length > 0\n    ? `HAVING ${havingConditions.join(' AND ')}`\n    : '';\n\n  let queryBuilder = `\n    SELECT \n      productId,\n      groupId,\n      SUM(total_views) as total_views,\n      SUM(cou_views) as cou_views,\n      SUM(nav_views) as nav_views,\n      SUM(ele_views) as ele_views,\n      SUM(acu_views) as acu_views,\n      SUM(gma_views) as gma_views\n    FROM product_views \n    ${whereClause}\n    GROUP BY productId, groupId\n    ${havingClause}\n    ORDER BY ${sortColumn} ${order}\n    LIMIT 1000;\n  `;\n\n  try {\n    const { results } = await env.DB.prepare(queryBuilder)\n      .bind(...bindings)\n      .all();\n      \n    return new Response(JSON.stringify(results), {\n      headers: { 'Content-Type': 'application/json' },\n    });\n  } catch (e) {\n    return new Response(JSON.stringify({ error: e.message }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n});\n\nrouter.all('*', () => new Response('Not Found.', { status: 404 }));\n\nexport default {\n  fetch: router.handle,\n};\n\n// Durable Object \uD074\uB798\uC2A4 \uB0B4\uBCF4\uB0B4\uAE30\nexport { ProductTracker }; "],
  "mappings": "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",
  "names": ["Router", "base", "routes", "other", "__proto__", "Proxy", "get", "target", "prop", "receiver", "path", "fetch", "route", "handlers", "push", "toUpperCase", "RegExp", "replace", "async", "request", "args", "response", "match", "url", "URL", "query", "k", "v", "searchParams", "concat", "method", "regex", "pathname", "params", "groups", "handler", "proxy", "createResponse", "format", "transform", "body", "headers", "rest", "constructor", "name", "Response", "entries", "Object", "fromEntries", "json", "JSON", "stringify", "text", "createResponse", "String", "html", "jpeg", "png", "webp", "e", "i", "e"]
}
